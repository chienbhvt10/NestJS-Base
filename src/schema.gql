# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  accessToken: String
  refreshToken: String
}

""""""
type Category {
  createdAt: DateTime
  id: String!
  name: String!
  updatedAt: DateTime
}

input ChangePasswordInput {
  newPass: String!
  oldPass: String!
}

""""""
type Classes {
  createdAt: DateTime
  id: String!
  name: String
  shortName: String
  updatedAt: DateTime
}

""""""
input CreateClassInput {
  name: String!
  shortName: String
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  changePassword(input: ChangePasswordInput!): Boolean!
  createAdminUser(input: CreateUserInput!): User!
  createCategory: Boolean!
  createClass(input: CreateClassInput!): Classes!
  createClientUser(input: CreateUserInput!): User!
  createProduct: Boolean!
  deleteCategory: Boolean!
  deleteClass(id: String!): Classes!
  deleteProduct: Boolean!
  loginAdmin(loginInput: LoginInput!): Auth!
  loginClient(loginInput: LoginInput!): Auth!
  removeUser(id: String!): User!
  updateCategory: Boolean!
  updateClass(input: UpdateClassInput!): Classes!
  updateProduct: Boolean!
  updateUser(input: UpdateUserInput!): User!
  updateUserProfile(input: UpdateUserInput!): User!
}

""""""
type Product {
  categoryId: Float
  createdAt: DateTime
  id: String!
  name: String
  price: Float
  shortName: String
  updatedAt: DateTime
}

type Query {
  forgotPassword: Boolean!
  getAClass(id: String!): Classes!
  getAUser(id: String!): User!
  getAllClasses: [Classes!]!
  getAllUsers: [User!]!
  getCategories: [Category!]!
  getCategory: Category!
  getProduct: Product!
  getProducts: [Product!]!
  me: Boolean!
}

enum Role {
  ADMIN
  CLIENT
}

""""""
input UpdateClassInput {
  id: String!
  name: String!
  shortName: String
}

input UpdateUserInput {
  email: String
  id: String!
  username: String
}

""""""
type User {
  createdAt: DateTime
  email: String!
  id: String!
  password: String!
  role: Role!
  status: UserStatus!
  updatedAt: DateTime
  username: String!
}

enum UserStatus {
  ACTIVE
  IN_ACTIVE
  NOT_ACTIVE
}